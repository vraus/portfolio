{
  "projects": [
    {
      "id": "2",
      "title": "Terra Regina",
      "tags": ["C++", "Unreal Engine"],
      "image": "./webms/terraregina/terraregina_showcase.webm",
      "short_description": "Solo project C++ prototype for Multiplayer Combat System with AIs",
      "duration": "2 weeks",
      "team_size": "Solo",
      "language": "Unreal / C++",
      "date": "2025",
      "role": "Game Developer",
      "project_type": "Solo Project",
      "links": {
        "source_code": null,
        "itch_io": "https://vraus.itch.io/terra-regina",
        "youtube": ["https://www.youtube.com/watch?v=fbt99PhCYyI"]
      },
      "technologies": {
        "engine": "Unreal Engine",
        "languages": ["C++", "Blueprints", "Perforce"]
      },
      "description": ["This project is a <strong>multiplayer combat system</strong> built entirely in <strong>C++ in Unreal Engine 5</strong>.", "It’s a personal prototype made in about <strong>two weeks</strong> to experiment with multiplayer gameplay and advanced <strong>AI behaviors</strong>."],
      "contributions": "This project is very comprehensive and has allowed me to work on multiple aspects of developing a large-scale game while considering its networking components and scalability. My first contribution to this project was to integrate the versioning using Perforce, including the setup of a server to host the Perforce Server. I've also worked on the following Gameplay features.",
      "features": [
        {
          "name": "Combat System",
          "description": "Simple combat system with an animated basic attack and VFX, HealthComponent for both players and AIs, death and damage handlers...",
          "media": "./webms/terraregina/terraregina_combatsystem.webm"
        },
        {
          "name": "Replication",
          "description": "Everything relevant is replicated to all clients through the Server: animations, VFX, ragdolls, damages, etc...",
          "media": "./webms/terraregina/terraregina_replicated.webm"
        },
        {
          "name": "Replicated Combat System",
          "description": "The AIs can sense any player and attack it. Animations, damages etc... are always replicated on every clients, and AIs are handled by the server.",
          "media": "./webms/terraregina/terraregina_multiplayercombat.webm"
        },
        {
          "name": "AI Sense System",
          "description": "AIs have a perception component initialized using C++ DataAssets. They use sight has primary sense and have hearing and damage sense too.",
          "media": "./webms/terraregina/terraregina_aisenses.webm"
        },
        {
          "name": "Block System",
          "description": "Blocking System with Idle animation, and react animation. Also replicated.",
          "media": "./webms/terraregina/terraregina_blocksystem.webm"
        },
        {
          "name": "EQS Cover",
          "description": "AIs use Environment Query System (EQS) to determine some positions in the world based on certain conditions. Here, they take cover when they are low on health.",
          "media": "./webms/terraregina/terraregina_eqscover.webm"
        },
        {
          "name": "AI-Type Based EQS",
          "description": "Also with EQS, ranged enemies are able to find an optimal position to attack the target, and a melee enemy will strafe around the player between each round of assault.",
          "media": "./webms/terraregina/terraregina_aitypebasedeqs.webm"
        }
      ],
      "key_points": ["Planning AI behaviors early is essential for smooth development", "Using EQS makes AI feel smarter and more reactive"]
    },
    {
      "id": "6",
      "title": "Fly Me To The Room",
      "tags": ["Unreal Engine", "Ableton", "Game Jam"],
      "image": "./images/projects/flymetotheroom/flymetotheroom.webp",
      "short_description": "A Game Jam project for the DTJ#13 Anniversary Edition on Itch.io !",
      "duration": "36 Hours",
      "team_size": "3 developers",
      "language": "Unreal Engine 5",
      "date": "2025",
      "role": "Game Developper & Sound Design",
      "project_type": "Game Jam",
      "links": {
        "source_code": "https://github.com/vraus/FlyMeToTheRoom",
        "itch_io": "https://vraus.itch.io/fly-me-to-the-room",
        "youtube": ["https://youtu.be/cltRaqTl5Mg"]
      },
      "technologies": {
        "engine": "Unreal Engine",
        "languages": ["Blueprints", "Ableton", "GitHub"]
      },
      "description": [
        "This project was a <a href='https://itch.io/jam/dtj36-13/rate/3511486' target='_blank'>submission</a> for the <a href='https://itch.io/jam/dtj36-13' target='_blank'>Devs That Jam #13</a>, a 36-hour game jam with the theme \"One Room\".",
        "We decided to put the player in the role of a fly exploring a single room that feels enormous from its perspective. The goal is to find other flies scattered around the space and rescue those trapped in fly traps — whether set by humans or predators — so that they can all escape the house together.",
        "Our team of three tackled this challenge over a weekend:",
        "– <a href='https://www.linkedin.com/in/deryne-four/' target='_blank'>ChevRubis</a> – Game Developer<br/>– <a href='https://www.linkedin.com/in/pierre-louis-bouchez' target='_blank'>Paouis</a> – 3D Environment & Level Designer, Asset Creation<br/>– Myself – Game Developer & Sound Designer"
      ],
      "contributions": "As for my contributions to the Game Development, I focused primarily on designing the fly controller to make movement feel responsive, fun, and truly immersive — so the player really feels like a fly. I also co-developed the core gameplay loop alongside ChevRubis and assisted with the implementation of various other features.<br/><br/>On the audio side, I created a cover of Fly Me to the Moon (Frank Sinatra) using Ableton, but in a more goofy style, and composed both the victory and game over sound effects.",
      "features": [
        {
          "name": "Fly Controller",
          "description": null,
          "media": "./images/projects/flymetotheroom/oOlOzc.webp"
        },
        {
          "name": "Flies to rescue",
          "description": null,
          "media": "./images/projects/flymetotheroom/Um_6rB.webp"
        },
        {
          "name": "Traps",
          "description": null,
          "media": "./images/projects/flymetotheroom/VoX9X-.webp"
        }
      ],
      "key_points": [
      ]
    },
    {
      "id": "1",
      "tags": ["C++", "Unreal Engine"],
      "title": "Steering Lab",
      "image": "./webms/steeringlab/seekfleearrival.webm",
      "short_description": "Course project about AI in Games. Using C++ in Unreal, reproducing the steering of a controlled Pawn.",
      "duration": "5 months",
      "team_size": "Solo",
      "language": "Unreal / C++",
      "date": "2025",
      "role": "Game Developer",
      "project_type": "Course Project",
      "links": {
        "source_code": "https://github.com/vraus/Steering_Lab",
        "itch_io": "https://vraus.itch.io/steering-lab",
        "youtube": [
          "https://www.youtube.com/watch?v=2dMmzMgBLvo",
          "https://youtu.be/HNnz6hbwzCo"
        ]
      },
      "technologies": {
        "engine": "Unreal Engine",
        "languages": ["C++", "Blueprints"]
      },
      "description": ["The <strong>Steering Lab project</strong> aims to recreate, in <strong>C++</strong>, the movement of a Pawn in a 3D environment based on a Target and a Behavior.", "The Pawn has several possible behaviors that can be selected at runtime, described in the features section."],
      "contributions": "As a solo project, I made alone all the features for this Lab.",
      "features": [
        {
          "name": "Seek / Flee / Arrival",
          "description": "Moving toward and away from a Target without anticipation for stop, and Arrival stops the agent upon reaching the destination point.",
          "media": "./webms/steeringlab/seekfleearrival.webm"
        },
        {
          "name": "Pursuit / Evade",
          "description": "Moves toward or away from a moving Target with anticipation, predicting its path to chase or avoid efficiently.",
          "media": "./webms/steeringlab/pursuitevade.webm"
        },
        {
          "name": "Paths Behaviors",
          "description": "Defines how the agent follows a path: looping back, stopping at the end, or reversing direction to return to the start position.",
          "media": "./webms/steeringlab/pathbehaviors.webm"
        },
        {
          "name": "Path Finding / Avoidance",
          "description": "Path finding (A*) using SteeringLab code base for multiple agent to go back and forth between Targets and initial point.",
          "media": "./webms/steeringlab/pathfinding.webm"
        }
      ],
      "key_points": []
    },
    {
      "id": "3",
      "title": "Wwisard",
      "tags": ["C++", "Unreal Engine"],
      "image": "./webms/wwisard/wwisardgameplay.webm",
      "short_description": "Single-Player Mini-FPS as a first approach to WWise integration in Unreal Engine 5 and Sound Programmation.",
      "duration": "3 months",
      "team_size": "1 developer",
      "language": "Unreal / C++",
      "date": "2024",
      "role": "Game Developper",
      "project_type": "Personnal Project",
      "links": {
        "source_code": "https://github.com/vraus/Wwisard",
        "itch_io": null,
        "youtube": ["https://youtu.be/03hS-5pdrZ8"]
      },
      "technologies": {
        "engine": "Unreal Engine",
        "languages": ["C++", "Blueprints", "Wwise"]
      },
      "description": ["I recently discovered how to integrate sounds dynamically and link them to gameplay using Wwise, and I wanted to practice with a simple gameplay project where I could experiment with the parameters and possibilities offered by this software." ," Since that project, I’ve been integrating Wwise into my other projects to plan audio programming, and I find this software very comprehensive and enjoyable to work with. The integration with Unreal is quite straightforward and well-documented."],
      "contributions": "These features reflects what I learned doing this project.",
      "features": [
        {
          "name": "3D Sound Integration",
          "description": "Using Wwise integration plugin in Unreal Engine to simulate 3D sound propagation.",
          "media": "./webms/wwisard/wwisardgameplay.webm"
        },
        {
          "name": "Control Menu",
          "description": "A simple UI menu used to control sound volume with detached buses in Wwise.",
          "media": "./webms/wwisard/wwisardmenu.webm"
        }
      ],
      "key_points": [
        "Wwise integration in Unreal Engine 5",
        "Basic Sound Programmation",
        "Exploring Immersive Sound",
        "Having fun with Sound Design and Programming"
      ]
    },
    {
      "id": "4",
      "title": "Chev's Quest",
      "tags": ["C#", "Unity"],
      "image": "./images/projects/chevsquest/chevs_quest.webp",
      "short_description": "A tiny Point & Click adventure taking place in European medieval eras, with various videogame references.",
      "duration": "3 months",
      "team_size": "Solo",
      "language": "Unity / C#",
      "date": "2024",
      "role": "Game Developper",
      "project_type": "Personnal Project",
      "links": {
        "source_code": "https://github.com/vraus/Chevs_Quest",
        "itch_io": "https://vraus.itch.io/chevs-quest",
        "youtube": ["https://youtu.be/VEuXIyEDj_0"]
      },
      "technologies": {
        "engine": "Unity",
        "languages": ["C#", "Ink Plugin"]
      },
      "description": ["I  originally wrote the story of this game as a gift. I chose a 2D pixel art graphic style because I really enjoy these atmospheres and it gives the simplistic homemade feel I was looking for in the first chapter of this character's adventures"],
      "contributions": "I developed the entire game in Unity using the <a href='https://www.inklestudios.com' target='_blank'>Ink Plugin</a> for managing character dialogues. I also made it a point to ensure a pleasant and consistent soundscape. My main reference for the music was Divinity Original Sin 2. And where there is music, there are also sound effects and ambiance. I added all the sounds I deemed relevant, as well as a menu to manage the different volume levels.",
      "features": [
        {
          "name": "Dialogues",
          "description": "Character dialogues using the Ink Plugin in Unity.",
          "media": null
        },
        {
          "name": "Sound Design",
          "description": "Using built-in sound management in Unity. Background music, sound effects, and ambiance. Plus a menu to manage the volume levels.",
          "media": null
        }
      ],
      "key_points": []
    },
    {
      "id": "5",
      "title": "Percival Engine",
      "tags": ["C++", "Vulkan"],
      "image": "./images/projects/percivalengine/percival_engine.webp",
      "short_description": "A project to learn about Engine Programming in C++ using the Vulkan graphics API.",
      "duration": "Ongoing Project",
      "team_size": "Solo",
      "language": "C++",
      "date": "2024",
      "role": "Engine Developper",
      "project_type": "Course Project",
      "links": {
        "source_code": "https://github.com/vraus/PercivalEngine",
        "itch_io": "https://vraus.itch.io/percival-engine",
        "youtube": []
      },
      "technologies": {
        "engine": "Unreal Engine",
        "languages": ["C++", "Blueprints", "Perforce"]
      },
      "description": [
        "This project I started is for me to learn about engine programming in C++ using the Vulkan graphics API. I'm an Unreal Engine user and enjoyer, and using Unreal Engine made me realize how amazing Vulkan is. I don't expect to build a working game engine for myself; I simply want to play around with the API and have a more in-depth understanding of what is going on behind a game engine.", 
        "I want to create a simple graphics engine that uses mechanical physics calculations to compute the movement logic within the engine. I want it to be as close to reality as possible.", 
        "Also, I love solving puzzles and this project is very challenging. I love it."],
      "contributions": "This project is a personal project, and I am the only developer.",
      "features": [
        {
          "name": "Rendering a Triangle",
          "description": "The first step in the graphics pipeline is to render a triangle. This involves setting up the graphics pipeline, creating a window, and rendering a triangle to the screen.",
          "media": "./images/projects/percivalengine/percival_engine.webp"
        },
        {
          "name": "Color and position translations",
          "description": "The next step is to add color and position translations to the triangle. This involves creating a vertex buffer and a color buffer using shader code, and then using them to render the triangle.",
          "media": "./webms/percivalengine/position_color_translation.webm"
        },
        {
          "name": "Scale and Rotation Transformations",
          "description": "The next step is to add scale and rotation transformations to the triangle. This involves creating a transformation matrix and using it to transform the triangle's vertices.",
          "media": "./webms/percivalengine/rotation_scale_translation.webm"
        }, 
        {
          "name": "Gravity System",
          "description": "The next step is to add a gravity system to the triangle. This involves creating a gravity vector and using it to update the triangle's position over time.",
          "media": null
        }
      ],
      "key_points": [
        "Graphics Pipeline Basic Setup",
        "Rendering a Triangle",
        "Window Resizing",
        "Copies and Motions",
        "Scale Rotation Transformations",
        "Gravity System"
      ]
    }
  ]
}
